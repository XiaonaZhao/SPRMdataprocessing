function CoreTest
% 统一的读取文件的模式
[filename, pathname] = ...
     uigetfile({'*.xlsx';'*.xls';'*.*'},'File Selector');
% %读取文件，注意fullfile
% M = xlsread(fullfile(pathname, filename));
[~,sheet] = xlsfinfo(fullfile(pathname, filename));
% for i = 1:length(sheet) % 读取不同工作表的内容
%     sheet_n = sheet{i};
% 读取文件，注意fullfile

% [r c] = size(M); % r是行，c是列，行列尺寸；
% R1 = M(2,:) % 显示第一行
%-----弹框选择x&y-----
prompt = {'Select ONE sheet:',...
    'Enter the sequence number for axis-X:',...
    'Enter the sequence number for axis-Y:',...
    'Enter the label for axis-X',...
    'Enter the original & final span for smoothing'};
%     dlg_title = 'Input';
dlg_title = 'Input';
num_lines = 1;
% num_lines 指定各用户输入值的行数。num_lines 可以为标量、列矢量或 m×2 数组。
defaultans = {'1','1','2','Voltage /V','50 50'};%如果没有输入
% 'Voltage /V'指横坐标

answer = inputdlg(prompt,dlg_title,num_lines,defaultans);% 接收X
n = str2num(answer{1});
X = str2num(answer{2}); % 这里的str2num没有问题，放心用
Y = str2num(answer{3});
SPAN = str2num(answer{5});
% % Use curly bracket for subscript
% [val status] = str2num(answer{1});
% if ~status
%     % Handle empty value returned
%     % for unsuccessful conversion
%     % ...
% end
% % val is a scalar or matrix converted from the first input
% % str2num 不对字符串数组或元胞数组执行运算。要将字符串数组或字符矢量元胞数组转换为数值，请使用 str2double。

%% -----1-D Wavelet Denoising-----
% len = 2^11;
% h = [4  -5  3  -4  5  -4.2   2.1   4.3  -3.1   5.1  -4.2];
% t = [0.1  0.13  0.15  0.23  0.25  0.40  0.44  0.65  0.76  0.78  0.81];
% h  = abs(h);
% w  = 0.01*[0.5 0.5 0.6 1 1 3 1 1 0.5 0.8 0.5];
% tt = linspace(0,1,len);  xref = zeros(1,len);
% for j=1:11
%     xref = xref + ( h(j) ./ (1+ ((tt-t(j))/w(j)).^4));
% end
% ---Add zero-mean white Gaussian noise with a variance of 0.25.
% rng default;
% x = xref + 0.5*randn(size(xref));
% plot(x); set(gca,'xlim',[1 2048]);
x = M(:,1);

% ---Use the periodization signal extension mode
dwtmode('per');

% [xd,cxd,lxd] = wden(x,'sqtwolog','s','sln',4,'sym4');
% plot(xd);
% set(gca,'xlim',[1 2048]); hold on;
% plot(xref,'r');
[xd,cxd,lxd] = wden(x,'sqtwolog','s','sln',4,'sym4');
plot(xd);
set(gca,'xlim',[1 8000]); hold on;
plot(xref,'r');
%% -----findLow_HighVoltage-----

y = M(:,1);
yy1 = smooth(y,30); % 平滑y数据
[pksH,locsH] = findpeaks(yy1) 
% 获取M第1列的极大值以及其位置
[pksL,locsL] = findpeaks((-1)*yy1) 
% 获取M第1列的极小值*-1以及其位置
% [pksH,locsH] = findpeaks(yy1,'MinPeakProminence',600) 
% % 获取M第1列的极大值以及其位置
% [pksL,locsL] = findpeaks((-1)*yy1,'MinPeakProminence',600) 
% % 获取M第1列的极小值*-1以及其位置
pksL = -1*pksL;  % 获取M第1列的极小值以及其位置
% ---修改矩阵信息---
[r,c] = size(M) % 求矩阵行列信息
N = zeros(1,c); % 产生一维零矩阵制造存放空间
if locsH(1) < locsL(1)
    for i = 1:length(pksH)
        N(1,locsH(i)) = 0.9; % 矩阵中特定位置的值
        N(1,locsL(i)) = 0.2; % 矩阵中特定位置的值
        % ---Sequence插值(0.9 V - 0.2 V)---
        d = (0.9-0.2)/(locsL(i)-locsH(i));
        for j = 1:(locsL(i)-locsH(i)-1)
            N(1,locsH(i)+j) = 0.9-j*d;
        end
    end
    % ---Sequence插值(0.2 V - 0.9 V)---
    for i = 1:length(pksL)-1
        d = (0.9-0.2)/(locsH(i+1)-locsL(i));
        N(1,locsL(i)+i) = 0.2+i*d;
    end
else
    N(1,locsL(1)) = 0.2; % 矩阵中0.2比0.9多一个
    for i = 1:length(pksH)
        N(1,locsH(i)) = 0.9; % 矩阵中特定位置的值
        N(1,locsL(i+1)) = 0.2; % 矩阵中特定位置的值
        % ---Sequence插值(0.9 V - 0.2 V)---
        d = (0.9-0.2)/(locsL(i+1)-locsH(i));
        for j = 1:(locsL(i+1)-locsH(i)-1)
            N(1,locsH(i)+j) = 0.9-j*d;
        end
    end
    % ---Sequence插值(0.2 V - 0.9 V)---
    for i = 1:length(pksL)-1
        d = (0.9-0.2)/(locsH(i)-locsL(i));
        N(1,locsL(i)+i) = 0.2+i*d;
    end
end
[ri,ci] = size(N)
% M = M'; % 转置矩阵
% M = [M; N]'; % 回归原来的矩阵，比之前多一行
% ---下一步应该如何传参，
%所以不应该一个一个往下粘了，还是应该采取外部传参的方法

% pksH =
%   空的 0×1 double 列向量
% locsH =
%   空的 01 double 列向量
% pksL =
%   空的 0×1 double 列向量
% locsL =
%   空的 0×1 double 列向量
% r =
%         7875
% c =
%      6
% 索引超出矩阵维度。
% 出错 CoreTest (line 17)
% if locsH(1) < locsL(1) 
